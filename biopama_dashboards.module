<?php

/**
 * implementing hook_theme().
 */
use Drupal\Core\Form\FormStateInterface;

 function biopama_install_configurations(){

   $dashboards_pages = [
    [
    'taxonomy' => 'BIOPAMA LandingPage',
    'path' =>'BPMLP_page_landingpage',
    'template' => 'views-view--biopama-dashboards-landingpage--page-1.html.twig',
    'view_machine_name' => 'biopama_dashboards_landingpage',
    'header' => [
                 'Biopama Welcome' => [
                   'title' => 'Welcome',
                   'subtitle' => '',
                   'body' => '<p>to the new version of the BIOPAMA Reference Information System (RIS 2.0), our web-based, open-source information system for protected areas across the 79 countries of the&nbsp;<a href="http://acp.int">Africa, Caribbean, Pacific (ACP)</a> Group of States.</p><h2><b>What\'s New</b></h2><p>The RIS 2.0 is a major re-design, so you\'ll find a very different look and feel if you were a user of the previous system. But don\'t worry, you can still navigate easily across regions, countries or individual protected areas to find the information you need, with an intuitive, map-centric interface.</p>',
                   'link' => '',
                 ],
                ],
    'cards' => [ 'PA Dashboard' => [
                                  'title' => 'PA Dashboard',
                                  'subtitle' => 'Protected areas global knowledge',
                                  'body' => '',
                                  'link' => ['uri' => 'internal:/BPMLP_PA_dashboard', 'title' => 'PA Dashboard'],
                                  'elem_order' => 0,
                                ],
               ],
      'learn' => [],
    ],
    [
    'taxonomy' => 'BIOPAMA PA Dashboard',
    'path' =>'BPMLP_PA_dashboard',
    'template' => 'views-view--biopama-dashboards-landingpage--page-2.html.twig',
    'view_machine_name' => 'biopama_dashboards_landingpage',
    'header' => [],
    'cards' => [], // empty i.e. default nodes created or define cards to be created
    'learn' => [],
    ],
    // PAME landing page and cards
    [
    'taxonomy' => 'PAME LandingPage', // new main page taxonomy will be created
    'path' =>'BPMLP_page_pame', // this path needs to be specified in the view.biopama_dashboards_pame.yml file and all Taxonomies here should point to this above taxonomy
    'template' => 'views-view--biopama-dashboards-pame--page-1.html.twig', // template to use, copy of the default one where all views names are replaced with the one here below
    'view_machine_name' => 'biopama_dashboards_pame', // view name specified in the view.biopama_dashboards_pame.yml file
    'header' => [
                 'PAME Dashboard' => [
                   'title' => 'PAME Dashboard',
                   'subtitle' => '',
                   'body' => '<p>&nbsp;</p><p>Protected areas (PAs) are a key strategy for the conservation of natural values&nbsp;with associated ecosystem services and cultural values. But PAs need to be managed effectively in order to achieve their multiple goals and objectives. The evaluation of <strong>Protected Area&nbsp;Management Effectiveness (PAME) </strong>is therefore a critical element of adaptive PA management.</p><p><strong>This PAME Module of the BIOPAMA&nbsp;Reference Information System (RIS) provides a one-stop shop for essential information and resources on PAME in the African, Caribbean and Pacific (ACP) countries</strong>. The module supports the BIOPAMA Regional Observatories, national ministries and agencies, PA managers and staff, and others (e.g. donors and NGOs).</p><p>The module provides an overview of the most important PAME assessment tools and the many PAME assessments carried out in the ACP countries&nbsp;(e.g. which tools have been used where and when). The module also provides easy access to key PAME resources and PA management plans. Registered users can contribute additional information and resources to the PAME Module.</p>',
                   'link' => '',
                 ],
                ],
    'cards' => [ 'Tools' => [
                                  'title' => 'Tools',
                                  'subtitle' => 'Learn about the main PAME Assessment Tools',
                                  'body' => '',
                                  'link' => ['uri' => 'internal:/BPMLP_page_pame_tools', 'title' => 'Assessment Tools'],
                                  'elem_order' => 0,
                                ],
                  'Assessments' => [
                                  'title' => 'Assessments',
                                  'subtitle' => 'Browse, search and map PAME Assessments',
                                  'body' => '',
                                  'link' => ['uri' => 'internal:/BPMLP_page_pame_assessments', 'title' => 'Assessments'],
                                  'elem_order' => 1,
                                ],
                  'Resources' => [
                                  'title' => 'Resources',
                                  'subtitle' => 'Browse, search and add PAME Assessments',
                                  'body' => '',
                                  'link' => ['uri' => 'internal:/BPMLP_page_pame_resources', 'title' => 'Resources'],
                                  'elem_order' => 2,
                                ],
                  'Management' => [
                                  'title' => 'Management Plans',
                                  'subtitle' => 'Browse, search and add Management Plans',
                                  'body' => '',
                                  'link' => ['uri' => 'internal:/BPMLP_page_pame_management', 'title' => 'Management Plans'],
                                  'elem_order' => 3,
                                ],
               ],
      'learn' => [],
    ],
    // PAGE landing page and cards
    [
    'taxonomy' => 'PAGE LandingPage', // new main page taxonomy will be created
    'path' =>'BPMLP_page_page', // this path needs to be specified in the view.biopama_dashboards_page.yml file and all Taxonomies here should point to this above taxonomy
    'template' => 'views-view--biopama-dashboards-page--page-1.html.twig', // template to use, copy of the default one where all views names are replaced with the one here below
    'view_machine_name' => 'biopama_dashboards_page', // view name specified in the view.biopama_dashboards_page.yml file
    'header' => [
                 'PAGE Dashboard' => [
                   'title' => 'PAGE Dashboard',
                   'subtitle' => '',
                   'body' => '<p>PAGE</p>',
                   'link' => '',
                 ],
                ],
    'cards' => [ 'Tools' => [
                                  'title' => 'PAGE Tools',
                                  'subtitle' => 'Learn about the main PAGE Assessment Tools',
                                  'body' => '',
                                  'link' => ['uri' => 'internal:/BPMLP_page_page_tools', 'title' => 'Assessment Tools'],
                                  'elem_order' => 0,
                                ],
                  'Assessments' => [
                                  'title' => 'PAGE Assessments',
                                  'subtitle' => 'Browse, search and map PAGE Assessments',
                                  'body' => '',
                                  'link' => ['uri' => 'internal:/BPMLP_page_page_assessments', 'title' => 'Assessments'],
                                  'elem_order' => 1,
                                ],
                  'Resources' => [
                                  'title' => 'PAGE Resources',
                                  'subtitle' => 'Browse, search and add PAGE Assessments',
                                  'body' => '',
                                  'link' => ['uri' => 'internal:/BPMLP_page_page_resources', 'title' => 'Resources'],
                                  'elem_order' => 2,
                                ],
                  'Management' => [
                                  'title' => 'PAGE Management Plans',
                                  'subtitle' => 'Browse, search and add Management Plans',
                                  'body' => '',
                                  'link' => ['uri' => 'internal:/BPMLP_page_page_management', 'title' => 'Management Plans'],
                                  'elem_order' => 3,
                                ],
               ],
      'learn' => [],
    ]
  ]; // List of test terms
   return $dashboards_pages;
 }

  function biopama_dashboards_theme($existing, $type, $theme, $path) {

   $dashboards_pages = biopama_install_configurations();
   $array = [
       // PAME MODULE
       'views_view__biopama_dashboards_pame__page_3' => ['base hook' => 'view'],
       'views_view__biopama_dashboards_pame__page_2' => ['base hook' => 'view'],
       'views_view__biopama_dashboards_pame__page_4' => ['base hook' => 'view'],
       'views_view__biopama_dashboards_pame__page_5' => ['base hook' => 'view'],
			 'views_view_fields__pame_management__block_2' => ['base hook' => 'view'],
			 'views_view_fields__pame_resources__block_1' => ['base hook' => 'view'],
       // PAGE MODULE
       'views_view__biopama_dashboards_page__page_3' => ['base hook' => 'view'],
       'views_view__biopama_dashboards_page__page_2' => ['base hook' => 'view'],
       'views_view__biopama_dashboards_page__page_4' => ['base hook' => 'view'],
       'views_view__biopama_dashboards_page__page_5' => ['base hook' => 'view'],
			 'views_view_fields__page_management__block_2' => ['base hook' => 'view'],
			 'views_view_fields__page_resources__block_1' => ['base hook' => 'view'],
            ];
   foreach( $dashboards_pages as $dashboard_page){
      $underscore = explode('.html.',str_replace('-','_',$dashboard_page["template"]))[0];
      $array[$underscore] = ['base hook' => 'view'];
    }

  \Drupal::logger('biopama_dashboards')->notice($theme);

  \Drupal::logger('biopama_dashboards')->notice(json_encode($array));
   return $array;
 } 

function biopama_dashboards_install(){

  $dashboards_pages = biopama_install_configurations();
  // Populates 'Vocabulary name' vocabulary with taxonomy terms.
  //use Drupal\taxonomy\Entity\Term;
  $categories_vocabulary = 'biopama_dashboards'; // Vocabulary machine name
  foreach ($dashboards_pages as $dashboard_page) {

    $category = $dashboard_page["taxonomy"];
    $check1 = taxonomy_term_load_multiple_by_name($category,$categories_vocabulary);
    if (sizeof($check1) <1 ){
      \Drupal::logger('biopama_dashboards')->notice('INSTALLING, creating Taxonomy : ' . $categories_vocabulary.' | '. $category );
      $term = \Drupal\taxonomy\Entity\Term::create([
            'vid' => $categories_vocabulary,
            'name' => $category,
          ]);
      $term->save();
    }else{
      \Drupal::logger('biopama_dashboards')->notice('INSTALLING, Taxonomy already exists : ' . $categories_vocabulary.' | '. $category );
    }
  }

  // Populate page-type taxonomy
  $sections_vocabulary = 'biopama_dashboards_section'; // Vocabulary machine name
  $sections = ['Content', 'Dashboard cards', 'Header','Learn & Explore Contents','Timeline or Workflow']; // List of test terms
  foreach ($sections as $section) {

    $check2 = taxonomy_term_load_multiple_by_name($section,$sections_vocabulary);
    if (sizeof($check2) <1 ){
      \Drupal::logger('biopama_dashboards')->notice('INSTALLING, creating Taxonomy : ' . $sections_vocabulary.' | '. $section );
      $term = \Drupal\taxonomy\Entity\Term::create([
            'vid' => $sections_vocabulary,
            'name' => $section,
          ]);
      $term->save();
    }else{
      \Drupal::logger('biopama_dashboards')->notice('INSTALLING, Taxonomy already exists : ' . $sections_vocabulary.' | '.$category );
    }
  }

  //..CREATE DEFAULT NODES
  foreach ($dashboards_pages as $dashboard_page){

    $category = $dashboard_page["taxonomy"];
    $view_path = $dashboard_page["path"];

    $dashboard_page_tid = taxonomy_term_load_multiple_by_name($category,$categories_vocabulary);

    // .. create default Header node for LandingPage
    $header_tid = taxonomy_term_load_multiple_by_name('Header',$sections_vocabulary);
    if ( sizeof($dashboard_page['header']) > 0 ){
      foreach( $dashboard_page['header'] as $header){
		  
        $title = $header['title'];
		
        // Create node object with attached file.
        $values = \Drupal::entityQuery('node')->condition('title', $title)->execute();
        $node_exists = !empty($values);
        if (!$node_exists){
          $node = \Drupal\node\Entity\Node::create([
            'type'        => 'biopama_dashboards_content',
            'title'       => $title,
            'body'        => [ 'value' =>  $header['body'],
                               'format' => 'full_html',
                              ],
            'field_dashboard_elem_order' => 0,
            'field_dashboard_subtitle' => [ 'value' => $header['subtitle'] ],
            'field_dashboard_section' => [ 'target_id' => reset($header_tid)->id()],
            'field_biopama_dashboards' => ['target_id' => reset($dashboard_page_tid)->id()],
          ]);
          $node->save();
          \Drupal::logger('biopama_dashboards')->notice('INSTALLING, Creating default node for header : ' . $title );
        }
      }
    }else{
      $welcome = 'Welcome To '.$category;
      // Create node object with attached file.
      $values = \Drupal::entityQuery('node')->condition('title', $welcome)->execute();
      $node_exists = !empty($values);
      if (!$node_exists){
        $node = \Drupal\node\Entity\Node::create([
          'type'        => 'biopama_dashboards_content',
          'title'       => $welcome,
          'body'        => [ 'value' => '<p>Your landingpage view path is <a href="/'.$view_path.'">/'.$view_path.'</a>,\
           of course you can change it form the view or use this for your frontpage.</p><p>Read how this module works and the full docuemtation here below in the Learn & Explore section.</p>' ,
                             'format' => 'full_html',
                            ],
          'field_dashboard_elem_order' => 0,
          'field_dashboard_subtitle' => [ 'value' => 'This is your subtitle ...' ],
          'field_dashboard_section' => [ 'target_id' => reset($header_tid)->id()],
          'field_biopama_dashboards' => ['target_id' => reset($dashboard_page_tid)->id()],
        ]);
        $node->save();
        \Drupal::logger('biopama_dashboards')->notice('INSTALLING, Creating default node for header : ' . $welcome );
      }
    }
    // .. create default Card node for LandingPage
    $cards_tid = taxonomy_term_load_multiple_by_name('Dashboard cards',$sections_vocabulary);
    if ( sizeof($dashboard_page['cards']) > 0 ){

      foreach( $dashboard_page['cards'] as $card){

          $title = $card['title'];
          // Create node object with attached file.
          $values = \Drupal::entityQuery('node')->condition('title', $title)->execute();
          $node_exists = !empty($values);
          if (!$node_exists){
            $node = \Drupal\node\Entity\Node::create([
              'type'        => 'biopama_dashboards_content',
              'title'       => $title,
              'body'        => [ 'value' => $card['body'],
                                 'format' => 'full_html',
                                ],
              'field_dashboard_elem_order' => $card['elem_order'],
              'field_dashboard_subtitle' => [ 'value' => $card['subtitle'] ],
              'field_dashboard_section' => [ 'target_id' => reset($cards_tid)->id()],
              'field_biopama_dashboards' => ['target_id' => reset($dashboard_page_tid)->id()],
              'field_dashboard_link' => [
                    'uri' => $card['link']['uri'],
                    'title' => $card['link']['title'],
                    'options' => ['attributes' => [
                    'target' => '_self'
                    ]],]
            ]);
            $node->save();
            \Drupal::logger('biopama_dashboards')->notice('INSTALLING, Creating default node for cards : ' . $title );
          }
        }
    }else{
          $welcome = 'BPMLP Card '.$category;
          // Create deafault node object with attached file.
          $values = \Drupal::entityQuery('node')->condition('title', $welcome)->execute();
          $node_exists = !empty($values);
          if (!$node_exists){
            $node = \Drupal\node\Entity\Node::create([
              'type'        => 'biopama_dashboards_content',
              'title'       => $welcome,
              'body'        => [ 'value' => 'This is a default text for your landingpage card ... you can also add an icon/image to the card. Edit this content :)',
                                 'format' => 'full_html',
                                ],
              'field_dashboard_elem_order' => 0,
              'field_dashboard_subtitle' => [ 'value' => 'Subtitle ...' ],
              'field_dashboard_section' => [ 'target_id' => reset($cards_tid)->id()],
              'field_biopama_dashboards' => ['target_id' => reset($dashboard_page_tid)->id()],
              'field_dashboard_link' => [
                    'uri' => 'internal:/admin/content?title=&type=biopama_dashboards_content&status=All&langcode=All',
                    'title' => 'Link',
                    'options' => ['attributes' => [
                    'target' => '_blank'
                    ]],]
            ]);
            $node->save();
            \Drupal::logger('biopama_dashboards')->notice('INSTALLING, Creating default node for cards : ' . $welcome );
          }
    }

    // .. create 1st default Learn node for LandingPage
    $learn_tid = taxonomy_term_load_multiple_by_name('Learn & Explore Contents',$sections_vocabulary);
    // $dashboard_page_tid = taxonomy_term_load_multiple_by_name('BIOPAMA LandingPage',$categories_vocabulary);
    $welcome = 'BPMLP GIT '.$category;
    // Create node object with attached file.
    $values = \Drupal::entityQuery('node')->condition('title', $welcome)->execute();
    $node_exists = !empty($values);
    if (!$node_exists){
      $node = \Drupal\node\Entity\Node::create([
        'type'        => 'biopama_dashboards_content',
        'title'       => $welcome,
        'body'        => [ 'value' => 'Read more' ,
                           'format' => 'full_html',
                          ],
        'field_dashboard_elem_order' => 0,
        'field_dashboard_subtitle' => [ 'value' => 'GitHub Repo' ],
        'field_dashboard_section' => [ 'target_id' => reset($learn_tid)->id()],
        'field_biopama_dashboards' => ['target_id' => reset($dashboard_page_tid)->id()],
        'field_dashboard_link' => [
              'uri' => 'https://github.com/Martenz/biopama_dashboards',
              'title' => 'Git Link',
              'options' => ['attributes' => [
              'target' => '_blank'
              ]],]
      ]);
      $node->save();
      \Drupal::logger('biopama_dashboards')->notice('INSTALLING, Creating default node for Learn section : ' . $welcome );
    }

    // .. create 1st default Learn node for LandingPage
    $learn_tid = taxonomy_term_load_multiple_by_name('Learn & Explore Contents',$sections_vocabulary);
    // $dashboard_page_tid = taxonomy_term_load_multiple_by_name('BIOPAMA LandingPage',$categories_vocabulary);
    $welcome = 'BPMLP READ ME '.$category;
    // Create node object with attached file.
    $values = \Drupal::entityQuery('node')->condition('title', $welcome)->execute();
    $node_exists = !empty($values);
    if (!$node_exists){
      $node = \Drupal\node\Entity\Node::create([
        'type'        => 'biopama_dashboards_content',
        'title'       => $welcome,
        'body'        => [ 'value' => 'This is a default text for your Documentation icons ... you can also add an icon/image to the card. Edit this content :)' ,
                           'format' => 'full_html',
                          ],
        'field_dashboard_elem_order' => 0,
        'field_dashboard_subtitle' => [ 'value' => 'Subtitle ...' ],
        'field_dashboard_section' => [ 'target_id' => reset($learn_tid)->id()],
        'field_biopama_dashboards' => ['target_id' => reset($dashboard_page_tid)->id()],
        'field_dashboard_link' => [
              'uri' => 'https://github.com/Martenz/biopama_dashboards',
              'title' => 'Git Link',
              'options' => ['attributes' => [
              'target' => '_blank'
              ]],]
      ]);
      $node->save();
      \Drupal::logger('biopama_dashboards')->notice('INSTALLING, Creating default node for Learn section : ' . $welcome );
    }

  }

}

function biopama_dashboards_preprocess(&$variables, $hook) {
  global $base_root, $base_path;
  $variables['image_path'] = $base_root . $base_path . drupal_get_path('module', 'biopama_dashboards') . '/images/';
  $variables['base_url'] = $GLOBALS['base_url']; /*\Drupal::request()->getRequestUri();*/
}

/*
* implements hook_preprocess_node()
*/
function biopama_dashboards_preprocess_node(&$variables) {
	$node = $variables['node'];
	/*
	* turn on dev_mode to see stuff that's in development through the templates.
	*/
	$variables['dev_mode'] = "false";
}

/*
* implements hook_view_pre_render()
*/
function biopama_dashboards_views_pre_render(\Drupal\views\ViewExecutable $view)
{
	if (isset($view)){
		switch($view->storage->id()){
			case 'biopama_dashboards':
				$view->element['#attached']['library'][] = 'biopama_dashboards/biopama_dashboards';
				break;
			default:
			  break;
		}
	}
}

 /**
   * Implements hook_form_FORM_ID_alter().
   *
   * Alters the artist options on artwork pages.
   */
  function biopama_dashboards_form_views_exposed_form_alter(&$form, FormStateInterface $form_state, $form_id) {
 
    // If not the view we are looking, move on
    switch ($form['#id']) {
      case 'views-exposed-form-pame-management-block-2':
        $country_field = 'country';
        break;
      case 'views-exposed-form-pame-resources-block-1':
        $country_field = 'field_country_iso3_value';
        break;

    /** Adding PAGE cases **/

      case 'views-exposed-form-page-management-block-2':
        $country_field = 'country';
        break;
      case 'views-exposed-form-page-resources-block-1':
        $country_field = 'field_country_iso3_value';
        break;


      default:
          return FALSE;
    }

    // Query nodes
    $storage = Drupal::getContainer()->get('entity_type.manager')->getStorage('node');
    $nids = $storage->getQuery();
 
    // Gather published artist nodes and sort by title
    $nids = $nids->condition('type', 'country')
     ->condition('status', 1)
     ->sort('title')
     ->execute();
 
    // If there are no nodes, move on
    if (!$nids) {
     return FALSE;
    }
 
    // Start building out the options for our select list
    $options = [];
    $nodes = $storage->loadMultiple($nids);
 
    // Push titles into select list
    foreach ($nodes as $node) {
     $value = $node->get('field_country_iso3')->getString();
     $options[$value] = $node->getTitle();
    }
 
    // Start building out our new form element
    $form[$country_field]['#type'] = 'select';
    $form[$country_field]['#empty_value'] = '';
    $form[$country_field]['#required'] = FALSE;
    $form[$country_field]['#multiple'] = FALSE;
 
    // Specify the empty option for our select list
    $form[$country_field]['#empty_option'] = t('- Any -');
    $options = [NULL => t('- Any -')] + $options; // Add an - Any - option
 
    // Add the $options from above to our select list
    $form[$country_field]['#options'] = $options;
    unset($form[$country_field]['#size']);
  }